---
title: "thingsaretworkin"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(tmap)
library(ggplot2)
library(sf)
library(maps)
library(viridis)
library(dplyr)
library(htmltools)
library(glue)
library(leaflet)
library(tigris)
```

Sources:
# https://simplemaps.com/data/us-counties
# https://www.streamlinehq.com/emojis/download/fire--31878
```{r}
county_point <- read_csv("https://raw.githubusercontent.com/StarryAri7/SDS264_F24/refs/heads/main/data/uscounties.csv") |> rename("state" = "state_name") |> select(county,state,lat,lng)

county_point$Latitude <- jitter(county_point$lat, factor = 0.1)
county_point$Longitude <- jitter(county_point$lng, factor = 0.1)

county_sf <- st_as_sf(county_point, coords = c("lng", "lat"))

county_sf <- st_set_crs(county_sf, 4326)

test <- county_sf |> left_join(fires) |> drop_na(acres) %>% 
  st_jitter(factor = 0.005) 


firesmall <-  makeIcon(
  iconUrl = "https://github.com/StarryAri7/SDS264_F24/blob/main/data/fire.png?raw=true",
  iconWidth = 28, iconHeight = 20
  )

firelarge <-  makeIcon(
  iconUrl = "https://github.com/StarryAri7/SDS264_F24/blob/main/data/fire.png?raw=true",
  iconWidth = 38, iconHeight = 28
  )


test <- test |> 
  mutate(acrespopup = str_glue("The {name} Fire in {county} County burned {acres} Acres"))

test |> leaflet() |> addProviderTiles("Stadia.StamenTerrain") |>
   addMarkers(icon = ~ firesmall,  popup = ~paste(
              "<strong> Name: </strong>", name, "Fire <br>",
              "<strong> Area Burned: </strong>", acres, "Acres <br>",
              "<strong> County: </strong>", county, "County <br>"
   ))


test |> leaflet() |> addProviderTiles("Stadia.StamenTerrain") |>
   addCircleMarkers(radius = ~ acres/15000, color = "#F2572C", popup = ~paste(
              "<strong> Name: </strong>", name, "Fire <br>",
              "<strong> Area Burned: </strong>", acres, "Acres <br>",
              "<strong> County: </strong>", county, "County <br>"
   ))

# 
#   if(test$acres < 1000){
#     iconWidth = 15 & iconHeight = 10
#   }else if(test$acres > 1000 & test$acres < 50000){
#     iconWidth = 25 & iconHeight = 20
#   } else if(test$acres > 50000 & test$acres < 100000){
#     iconWidth = 35 & iconHeight = 30
#   }else{
#     iconWidth = 45 & iconHeight = 40
#   }    

```


```{r}
fires25 <- fires |> filter(str_detect(containment_date, "2025"))
noend <- fires |> filter(str_detect(containment_date, "[^0,1,2,3,4,5,6,7,8,9]$"))

end24 <- fires |> anti_join(fires25) |> anti_join(noend) |>
  drop_na(containment_date) |>
  filter(containment_date != "unknown",
         containment_date != "2024") |>
  mutate(containment_date = fct_recode(containment_date, "November 4" = "{November 4"))

end25 <- fires25 |> 
  mutate(containment_date = fct_recode(containment_date, 
                                       "January 5, 2025" = "January 5 (2025)"),
        containment_date = as.factor(containment_date))

end24 <- end24 |>
  mutate(containment_date = glue_data(end24, "{containment_date}, 2024"),
         containment_date = as.factor(containment_date))

end24 <- end24 |> full_join(end25) |> select(-start_date)

start24 <- fires |>
  mutate(start_date = glue_data(fires, "{start_date}, 2024")) |> select(-containment_date)

dated_fires <- end24 |> left_join(start24) |> 
  relocate(containment_date, .after = start_date)

dated_fires <- dated_fires |>
  mutate(start_date = mdy(start_date),
         containment_date = mdy(containment_date),
         duration = containment_date - start_date,
         duration_cat = as.character(duration),
         duration_num = parse_number(duration_cat),
         acres_per_day = acres/duration_num) 
# 
# end24
# 
# 
# 
# 
#   ifelse((containment_date != str_detect("2025")) 
#          mutate(containment_date = containment_date),
#          mutate(containment_date = glue_data(fires, "{containment_date}, 2024")))
#          
```



